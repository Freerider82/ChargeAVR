
LCD_VP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000001e0  00000274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000033  00800062  00800062  00000276  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000276  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d8c  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002ff  00000000  00000000  00001118  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000038f  00000000  00000000  00001417  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  000017a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000412  00000000  00000000  000019f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009bf  00000000  00000000  00001e0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000027c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__vector_14>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__vector_19>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ee       	ldi	r30, 0xE0	; 224
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 39       	cpi	r26, 0x95	; 149
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 ee 00 	jmp	0x1dc	; 0x1dc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
				volatile uint16_t time=(array8[charge])? chargeTime:dischargeTime;
				volatile uint8_t index=(array8[charge])? oldChargeTime:oldDischargeTime;
				
				if(array[index]!=time){
					array[index]=time;
					showTime(8,1,time);
  92:	81 e0       	ldi	r24, 0x01	; 1
				}
			}			
			if(array[oldCurrentVoltage]!=array[currentVoltage]){
  94:	87 bb       	out	0x17, r24	; 23
  96:	c0 9a       	sbi	0x18, 0	; 24
  98:	83 ec       	ldi	r24, 0xC3	; 195
  9a:	99 e0       	ldi	r25, 0x09	; 9
  9c:	01 97       	sbiw	r24, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <main+0xa>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x10>
  a2:	00 00       	nop
				array[oldCurrentVoltage]=array[currentVoltage];
  a4:	c0 98       	cbi	0x18, 0	; 24
  a6:	83 ec       	ldi	r24, 0xC3	; 195
  a8:	99 e0       	ldi	r25, 0x09	; 9
  aa:	01 97       	sbiw	r24, 0x01	; 1
				showADC(2,0,array[currentVoltage]);				
  ac:	f1 f7       	brne	.-4      	; 0xaa <main+0x18>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <main+0x1e>
  b0:	00 00       	nop
  b2:	f1 cf       	rjmp	.-30     	; 0x96 <main+0x4>

000000b4 <__vector_14>:
  b4:	1f 92       	push	r1
  b6:	0f 92       	push	r0
			}			
			if(array[oldCurrentAmperage]!=array[currentAmperage]){
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	0f 92       	push	r0
  bc:	11 24       	eor	r1, r1
  be:	2f 93       	push	r18
  c0:	3f 93       	push	r19
  c2:	8f 93       	push	r24
  c4:	9f 93       	push	r25
  c6:	cf 93       	push	r28
				array[oldCurrentAmperage]=array[currentAmperage];
  c8:	df 93       	push	r29
  ca:	00 d0       	rcall	.+0      	; 0xcc <__vector_14+0x18>
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
				LCD_Goto(2,1);
  d0:	1a 82       	std	Y+2, r1	; 0x02
  d2:	19 82       	std	Y+1, r1	; 0x01
  d4:	84 b1       	in	r24, 0x04	; 4
				volatile uint8_t ch=(array8[charge])? '+':'-';								
  d6:	88 1f       	adc	r24, r24
  d8:	88 27       	eor	r24, r24
  da:	88 1f       	adc	r24, r24
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	9a 83       	std	Y+2, r25	; 0x02
  e0:	89 83       	std	Y+1, r24	; 0x01
  e2:	95 b1       	in	r25, 0x05	; 5
  e4:	29 81       	ldd	r18, Y+1	; 0x01
				LCD_WriteData(ch);				
  e6:	3a 81       	ldd	r19, Y+2	; 0x02
  e8:	89 2f       	mov	r24, r25
  ea:	90 e0       	ldi	r25, 0x00	; 0
				showADC(3,1,array[currentAmperage]);
  ec:	88 0f       	add	r24, r24
  ee:	99 1f       	adc	r25, r25
  f0:	82 2b       	or	r24, r18
  f2:	93 2b       	or	r25, r19
  f4:	9a 83       	std	Y+2, r25	; 0x02
  f6:	89 83       	std	Y+1, r24	; 0x01
  f8:	2f 9b       	sbis	0x05, 7	; 5
			}
			if(array[oldCurrentPWM]!=array[currentPWM]){
  fa:	0c c0       	rjmp	.+24     	; 0x114 <__vector_14+0x60>
  fc:	89 81       	ldd	r24, Y+1	; 0x01
  fe:	9a 81       	ldd	r25, Y+2	; 0x02
 100:	80 95       	com	r24
 102:	21 e0       	ldi	r18, 0x01	; 1
 104:	92 27       	eor	r25, r18
 106:	9a 83       	std	Y+2, r25	; 0x02
 108:	89 83       	std	Y+1, r24	; 0x01
				array[oldCurrentPWM]=array[currentPWM];
 10a:	89 81       	ldd	r24, Y+1	; 0x01
 10c:	9a 81       	ldd	r25, Y+2	; 0x02
 10e:	01 96       	adiw	r24, 0x01	; 1
 110:	9a 83       	std	Y+2, r25	; 0x02
				showPWM(10,0,array[currentPWM]);
 112:	89 83       	std	Y+1, r24	; 0x01
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	9a 81       	ldd	r25, Y+2	; 0x02
 118:	20 91 69 00 	lds	r18, 0x0069
 11c:	30 91 6a 00 	lds	r19, 0x006A
				setPwm(array[currentPWM]);
 120:	82 0f       	add	r24, r18
 122:	93 1f       	adc	r25, r19
 124:	90 93 6a 00 	sts	0x006A, r25
			}	
			if(array8[oldNumDischargeCharge]!=array8[numDischargeCharge]){
 128:	80 93 69 00 	sts	0x0069, r24
 12c:	80 91 68 00 	lds	r24, 0x0068
 130:	8f 5f       	subi	r24, 0xFF	; 255
 132:	80 93 68 00 	sts	0x0068, r24
				array8[oldNumDischargeCharge]=array8[numDischargeCharge];
 136:	80 91 68 00 	lds	r24, 0x0068
				LCD_Goto(14,0);
 13a:	84 36       	cpi	r24, 0x64	; 100
				LCD_SendNumber(array8[numDischargeCharge],' ');
			}		
		break;
		case DISPLAY_FAST_CHANGE:
			if(array8[oldCharge]!=array8[charge]){
 13c:	08 f4       	brcc	.+2      	; 0x140 <__vector_14+0x8c>
 13e:	36 9a       	sbi	0x06, 6	; 6
 140:	0f 90       	pop	r0
 142:	0f 90       	pop	r0
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
				array8[oldCharge]=array8[charge];	
 148:	9f 91       	pop	r25
 14a:	8f 91       	pop	r24
				LCD_ClearField(0,1,9);			
 14c:	3f 91       	pop	r19
 14e:	2f 91       	pop	r18
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
				LCD_Goto(0,1);
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <__vector_19>:
 15a:	1f 92       	push	r1
				if(array8[charge]){					
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
					LCD_SendStr("Charge");
 164:	8f 93       	push	r24
 166:	9f 93       	push	r25
 168:	ef 93       	push	r30
 16a:	ff 93       	push	r31
					BM_ClearBit(TCCR1A,COM1A0);
 16c:	80 91 60 00 	lds	r24, 0x0060
 170:	81 50       	subi	r24, 0x01	; 1
					SET_CHARGE;					
 172:	80 93 60 00 	sts	0x0060, r24
				}else{
					LCD_SendStr("Discharge");
 176:	80 91 60 00 	lds	r24, 0x0060
 17a:	81 11       	cpse	r24, r1
 17c:	26 c0       	rjmp	.+76     	; 0x1ca <__vector_19+0x70>
					BM_SetBit(TCCR1A,COM1A0);
 17e:	84 e0       	ldi	r24, 0x04	; 4
 180:	80 93 60 00 	sts	0x0060, r24
					SET_DISCHARGE;
 184:	80 91 66 00 	lds	r24, 0x0066
				}				
			}			
		break;
		case DISPLAY_PROGR:
			if(array[oldWindowsSettings]!=array[windowsSettings]){
 188:	90 91 67 00 	lds	r25, 0x0067
 18c:	01 96       	adiw	r24, 0x01	; 1
 18e:	90 93 67 00 	sts	0x0067, r25
 192:	80 93 66 00 	sts	0x0066, r24
 196:	e0 91 93 00 	lds	r30, 0x0093
				array[oldWindowsSettings]=array[windowsSettings];
 19a:	f0 91 94 00 	lds	r31, 0x0094
 19e:	80 81       	ld	r24, Z
 1a0:	88 23       	and	r24, r24
				showWinSettings(0,1,DISPLAY_PROGR+array[windowsSettings]);
 1a2:	51 f0       	breq	.+20     	; 0x1b8 <__vector_19+0x5e>
 1a4:	80 91 64 00 	lds	r24, 0x0064
 1a8:	90 91 65 00 	lds	r25, 0x0065
 1ac:	01 96       	adiw	r24, 0x01	; 1
 1ae:	90 93 65 00 	sts	0x0065, r25
 1b2:	80 93 64 00 	sts	0x0064, r24
			}
		break;
		case DISPLAY_P0:
			if(array[oldNormalVoltage]!=array[normalVoltage]){
 1b6:	09 c0       	rjmp	.+18     	; 0x1ca <__vector_19+0x70>
 1b8:	80 91 62 00 	lds	r24, 0x0062
 1bc:	90 91 63 00 	lds	r25, 0x0063
 1c0:	01 96       	adiw	r24, 0x01	; 1
 1c2:	90 93 63 00 	sts	0x0063, r25
				array[oldNormalVoltage]=array[normalVoltage];
 1c6:	80 93 62 00 	sts	0x0062, r24
 1ca:	ff 91       	pop	r31
 1cc:	ef 91       	pop	r30
				showADC(0,0,array[normalVoltage]);
 1ce:	9f 91       	pop	r25
 1d0:	8f 91       	pop	r24
 1d2:	0f 90       	pop	r0
			}
		break;
		case DISPLAY_P1:
			if(array[oldDischargeVoltage]!=array[dischargeVoltage]){
 1d4:	0f be       	out	0x3f, r0	; 63
 1d6:	0f 90       	pop	r0
 1d8:	1f 90       	pop	r1
 1da:	18 95       	reti

000001dc <_exit>:
 1dc:	f8 94       	cli

000001de <__stop_program>:
 1de:	ff cf       	rjmp	.-2      	; 0x1de <__stop_program>
